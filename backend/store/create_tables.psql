
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS roles CASCADE;

CREATE TYPE role AS ENUM ('student', 'tutor', 'convenor', 'admin');
CREATE TYPE semester AS ENUM ('summer', 'first', 'autumn', 'winter', 'second', 'spring');

-- This stores the basic account information
-- for every user, regardless of their role.
CREATE TABLE users (
	id            SERIAL PRIMARY KEY,
	firstname     VARCHAR(100)        NOT NULL,
	lastname      VARCHAR(100)        NOT NULL,
	email         VARCHAR(254) UNIQUE NOT NULL,
	password      BYTEA               NOT NULL,
	uid           VARCHAR(20)  UNIQUE NOT NULL
);

-- This contains the roles for each user. A
-- single user may have multiple roles.
CREATE TABLE roles (
	id SERIAL,
	role role,
	PRIMARY KEY (id, role),
	FOREIGN KEY (id) REFERENCES users(id)
);

CREATE TABLE courses (
	course_code VARCHAR(20) UNIQUE NOT NULL,
	time        semester           NOT NULL,
	title       VARCHAR(100)       NOT NULL,
	PRIMARY KEY (course_code, time),
);

CREATE TABLE enrol (
	user_id     SERIAL,
	course_code VARCHAR(20)   NOT NULL,
	time        semester      NOT NULL,
	FOREIGN KEY (user_id)     REFERENCES user(id),
	FOREIGN KEY (course_code) REFERENCES courses(course_code),
);

CREATE TABLE labs (
	id          SERIAL PRIMARY KEY,
	course_code VARCHAR(20)    NOT NULL,
	time        semester       NOT NULL,
	FOREIGN KEY (course_code) REFERENCES courses(course_code),
	FOREIGN KEY (time)        REFERENCES courses(time),
);

INSERT INTO users (id, firstname, lastname, email, password, uid) VALUES
	(1, 'Harrison', 'Turton', 'harrisonturton@gmail.com', 'JDJhJDEwJHEzMHRXL0RseUVSdjQuMDgydlA2enVHTlhtZ1VZcENBQUlmQVlSSy9IRzNrNFJxUGNNZ1cy', 'u6386433');

INSERT INTO roles (id, role) VALUES
	(1, 'admin'),
	(1, 'convenor'),
	(1, 'tutor'),
	(1, 'student');
